<?xml version="1.0" encoding="utf-8"?>


<program xmlns="http://www.kinoma.com/kpr/1">

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- ASSETS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	
	<skin id="MainSkin" color="white"/>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- STYLES -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->			
  	
	<style id="ButtonStyle" color="black" 
		font="bold 50px"/>
		
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- LAYOUTS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->  

    <container id="MainContainer" top="0" left="0" bottom="0" right="0" 
    	skin="MainSkin">
        <label top="0" left="0" bottom="0" right="0" 
            	string="'Cuenta Me'" style="ButtonStyle"/>         	
        <behavior>
            <method id="somebody" params="container"><![CDATA[
                //When button clicked, change text
                curString = container.first.string;
                container.first.string = "Hola!"    
            ]]></method>
            
            <method id="nobody" params="container"><![CDATA[
                //When button clicked, change text
                curString = container.first.string;
                container.first.string = "Adios!"
            ]]></method>
            
            <method id="onSensorConfigured" params="container"><![CDATA[
            	//Once the sensor has been configured, start reading from it.
            	Pins.repeat("/pir/wasPressed", 20, function(readResult){
				 if ( readResult == true ) {               
				    application.distribute( "somebody" );
				    trace ("from /gotButtonResult: pin_hi "+readResult+"\n");
				    }
				 if ( readResult == false )	{
				 	application.distribute( "nobody" );
				 	trace ("from /gotButtonResult: pin_lo "+readResult+"\n");
				 } 
    			});
            ]]></method>
        </behavior>            
    </container>
    
    <script><![CDATA[
    	Pins = require("pins");
    		
	    /* Create message for communication with hardware pins.
    	   button: name of pins object, will use later for calling 'button' methods.
    	   require: name of js or xml bll file.
    	   pins: initializes 'button' (matches 'button' object in the bll)
    	  	   	 with the given pin numbers. Pin types and directions
    	  		 are set within the bll.	*/
    	  		 
    	Pins.configure({
    		pir: {
    			require: "pir",
		        pins: {
                	ground: {pin: 51, type: "Ground"},
                	power: {pin: 52, voltage: 3.3, type: "Power"},
        			PIRinput: { pin: 53 }              
                }
            }
        }, function(success){
        	trace("Pins configuration " + (success ? "was " : "WAS NOT ") + "successful.\n");
        	//tell the rest of the application that the sensor configuration is done
        	if (success) application.distribute("onSensorConfigured");
        });
        
		/* Start application */   			
        application.add( new MainContainer() );       
    ]]></script>
</program>